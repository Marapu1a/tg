module.exports = async function sendStartMenu(ctx) {
    // –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    await ctx.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –≤ Telegram-–∫–∞–Ω–∞–ª–∞—Ö.\n\n" +
        "–°–æ–∑–¥–∞–≤–∞–π —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –∑–∞ 2 –º–∏–Ω—É—Ç—ã, —Å–æ–±–∏—Ä–∞–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –≤—ã–±–∏—Ä–∞–π –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n" +
        "–ü–æ–µ—Ö–∞–ª–∏?",
        {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: "üìò –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç", callback_data: "how_it_works" },
                        { text: "üéÆ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–µ–º–æ", callback_data: "start_demo" }
                    ]
                ]
            }
        }
    );

    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    await ctx.reply("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", {
        reply_markup: {
            keyboard: [
                ["üéØ –°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"],
                ["üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "üí∞ –ë–∞–ª–∞–Ω—Å"],
                ["‚ùå –û—Ç–º–µ–Ω–∞ / –°–±—Ä–æ—Å"]
            ],
            resize_keyboard: true,
            one_time_keyboard: false
        }
    });
};
